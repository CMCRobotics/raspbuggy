<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Raspbuggy]]></title><link href="http://cmcrobotics.github.io/raspbuggy/categories/lego-mindstorm/atom.xml" rel="self"/><link href="http://cmcrobotics.github.io/raspbuggy/"/><updated>2015-04-02T15:50:37+02:00</updated><id>http://cmcrobotics.github.io/raspbuggy/</id><author><name><![CDATA[CERN Micro Club Robotics]]></name><email><![CDATA[cmc.robotics@cern.ch]]></email></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Integration tests with Lego Mindstorms NXT]]></title><link href="http://cmcrobotics.github.io/raspbuggy/blog/2015/06/02/integration-tests-with-lego-mindstorms-nxt/"/><updated>2015-06-04T15:59:22+02:00</updated><id>/blog/2015/06/02/integration-tests-with-lego-mindstorms-nxt/</id><content type="html"><![CDATA[<p>Successful integration tests... but we do not an ABORT SCRIPT button !</p>
<!--more-->
<p>A quick session at the CERN Robotics club to test the full environment and
demonstrate what we have so far revealed a few minor bugs in the Javascript,
the fact that the NXT Light sensor API does not seem to work as expected (to
be investigated), and the need to have an ABORT SCRIPT feature for all
those infinite loops and errors in waiting times....</p>
<p>But overall, we are ready for the 17th June programming challenge at CERN Ideasquare !</p>
]]></content></entry><entry><title type="html"><![CDATA[A fully working programming environment for Lego Mindstorms NXT]]></title><link href="http://cmcrobotics.github.io/raspbuggy/blog/2015/05/31/a-fully-working-programming-environment-for-lego-mindstorms-nxt/"/><updated>2015-06-01T14:52:34+02:00</updated><id>/blog/2015/05/31/a-fully-working-programming-environment-for-lego-mindstorms-nxt/</id><content type="html"><![CDATA[<p>Finally, the programming environment is fully working for Lego Mindstorms NXT !
<img src="/raspbuggy/images/2015-05-31-webide-7cbd246be344a024612a8f410796bb46.jpg"></p>
<!--more-->
<p>The web-based programming environment supports :</p>
<ul>
<li>On-the-fly Python code generation (any change in the Blockly programming area is immediately reflected in Python)</li>
<li>A script preview panel (to see what the generated script looks like before execution)</li>
<li>Script execution monitoring (to know whether your script is still running)</li>
<li>Asynchronous console output (so that your program can provide debug outputs during execution)</li>
<li>and a very pleasant Bootstrap 3 based web user interface, as you can judge from the included screenshots.</li>
</ul>
<p>The generated script will currently only work for the Drivar Lego Mindstorms NXT layer, but it will be
very easily adapted to work with the Pimoroni Explorer HAT, or even a custom adapter board if we happen to come up with one.</p>
<p><img src="/raspbuggy/images/2015-05-31-webide-1-20b30a3e4f554537bd05e503e98927ba.jpg"></p>
]]></content></entry><entry><title type="html"><![CDATA[A Lego Mindstorm hardware layer]]></title><link href="http://cmcrobotics.github.io/raspbuggy/blog/2015/04/18/a-lego-mindstorm-hardware-layer/"/><updated>2015-05-03T20:45:04+02:00</updated><id>/blog/2015/04/18/a-lego-mindstorm-hardware-layer/</id><content type="html"><![CDATA[<p>The Raspbuggy platform is destined to be an open educational programming platform. It is designed to adapt to a
large array of hardware layers, so that it can evolve through time.</p>
<p>In order to cope with different hardware platforms, it relies on a hardware abstraction layer called "Drivar".</p>
<!--more-->
<p>Drivar is (currently) a Python library that provides a simple and stable API to give access to :</p>
<ul>
<li>Controlling the activity of the car motors (direction of the rotation, speed).</li>
<li>Obtaining reading from sensors (proximity ultrasonic sensors for instance).</li>
<li>Acquiring and processing images and videos for image recognition.</li>
</ul>
<p>Today, I have started writing the "Drivar NXT" classes, that allow the Raspbuggy to run on top of Lego Mindstorm NXT kit.</p>
<p>NXT kits are quite easy to drive from Python via USB thanks to the excellent NXT-Python library.</p>
<p>In order to organise our next Robotics challenge and introduce the Raspbuggy platform at CERN, we will use four NXT kits
that will provide an ideal development target for our contestants.</p>
<p>Stay tuned...</p>
]]></content></entry></feed>